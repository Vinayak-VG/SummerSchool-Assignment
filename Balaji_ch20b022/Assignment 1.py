# -*- coding: utf-8 -*-
"""summer-school assgn1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xJulGk5ozTQF4MG6Y9fL1sgDDxOUG1hh

# **Question-1**
"""

import random
y=[]
y_cab=[]
for i in range(100):
  y.append(random.randint(0,1))
  y_cab.append(random.random())

y_cab[0:5],y[0:5] # just to show all are not same

def cross_entropy(n,y,y_cab):
  import math
  O=0
  for i in range(len(y)):
    O+=(y[i]*math.log(y_cab[i],2)+(1-y[i])*math.log(1-y_cab[i],2))
  O=(-1.0/n)*O
  return O

"""#Test Cases q-1


"""

import numpy as np
#Test Case 1:
n = 5
y_hat = np.array([0.32, 0.56, 0.71, 0.14, 0.57])
y = np.array([1, 0, 1, 1, 0])
Result=cross_entropy(n,y,y_hat)
print("result={:.4f}".format(Result))

#Test Case 2:
n = 4
y_hat = np.array([0.23, 0.54, 0.61, 0.89])
y = np.array([0, 0, 1, 1])
Result=cross_entropy(n,y,y_hat)
print("result={:.4f}".format(Result))

#Test Case 3:
n = 7
y_hat = np.array([0.45, 0.10, 0.99, 0.32, 0.78, 0.81, 0.27])
y = np.array([1, 0, 1, 1, 1, 0, 0])
Result=cross_entropy(n,y,y_hat)
print("result={:.4f}".format(Result))

"""# **Question-2**"""

class find:
  def __init__(self,arr,target_sum,pairs={}):
    self.arr=arr
    self.target_sum=target_sum
    self.pairs=pairs
  def find_pair(self,arr,target_sum,pairs):
    k=0
    for i in range(len(arr)):
      for j in range(len(arr)):
        if (self.arr[i]+self.arr[j])==self.target_sum and i!=j:
          self.pairs[k]=[i,j]
          k+=1
    return (self.pairs)
  def show(self):
    print("array:",self.arr)
    print("target:",self.target_sum)
    self.find_pair(self.arr,self.target_sum,self.pairs)
    print("Result:",self.pairs)

numbers= [10,20,10,40,50,60,70]
target=50
X=find(numbers,target)
X.show()